name: build-images

on:
  workflow_call:
    inputs:
      tags:
        required: true
        type: string
    secrets:
      CI_PAT:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_KEY:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Fail if image tags is empty
        if: inputs.tags == ''
        run: exit 1
      - name: Checkout self
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.CI_PAT }}

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          architecture: x64

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build app
        run: |
          echo "Building application..."
          export MAVEN_OPTS="-Xmx8g -Xms4g -XX:MaxMetaspaceSize=1g"
          ./mvnw -T 1C clean install -DskipTests -Ddependency-scope.skip=true -Dmaven.javadoc.skip=true -Dair.check.skip-all=true

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.3.0

      - name: Login to DockerHub
        run: docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_KEY }}

      - name: Build dataplane docker image
        run: |
          chmod +x ./core/docker/build.sh
          ./core/docker/build.sh -a amd64  -x
      - name: Tag and push image
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        run: |
          for input_tag in ${{ inputs.tags }}; do
            docker tag trino:470-amd64 onehouse/onehouse-trino:$input_tag
            docker push onehouse/onehouse-trino:$input_tag
          done
      - name: Cleanup
        if: always()
        run: |
          docker system prune -f || true